import{_ as n,c as s,o as a,b as t}from"./app.7d15eb2b.js";const m='{"title":"\u6267\u884C vite \u547D\u4EE4\u505A\u4E86\u4EC0\u4E48\u4E8B","description":"","frontmatter":{"title":"\u6267\u884C vite \u547D\u4EE4\u505A\u4E86\u4EC0\u4E48\u4E8B"},"relativePath":"knowledge/vite/vite.js.md","lastUpdated":1638809386902}',p={},o=t(`<p>\u6211\u4EEC\u77E5\u9053\uFF0C<code>package.json</code> \u6587\u4EF6\u7684 <code>bin</code> \u5B57\u6BB5\u662F\u7528\u6765\u6307\u5B9A\u547D\u4EE4\u53CA\u547D\u4EE4\u6267\u884C\u7684\u6587\u4EF6</p><p>vite \u7684\u914D\u7F6E\u5982\u4E0B\uFF1A</p><div class="language-json"><pre><code><span class="token punctuation">{</span>
  <span class="token property">&quot;bin&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;vite&quot;</span><span class="token operator">:</span> <span class="token string">&quot;bin/vite.js&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u597D\u4E86\uFF0C\u6211\u4EEC\u77E5\u9053\u542F\u52A8 dev-server \u7684 <code>vite</code> \u547D\u4EE4\uFF0C\u5B9E\u9645\u8FD0\u884C\u7684\u5C31\u662F <code>bin/vite.js</code> \u6587\u4EF6\uFF0C\u90A3\u6211\u4EEC\u8FDB\u53BB\u770B\u770B\uFF1A</p><ol><li><p>\u5224\u65AD\u5F53\u524D\u76EE\u5F55\u662F\u5426\u5305\u542B <code>node_modules</code> \u76EE\u5F55\uFF0C\u82E5\u4E0D\u5305\u542B\uFF0C\u5219\u9700\u8981 <code>source-map</code> \u652F\u6301</p><div class="language-js"><pre><code><span class="token hashbang comment">#!/usr/bin/env node // \u56FA\u5B9A\u683C\u5F0F\uFF0C\u7528\u6765\u6307\u5B9A\u547D\u4EE4\u8FD0\u884C\u7684\u73AF\u5883\uFF08node\uFF09</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>__dirname<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&quot;node_modules&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token comment">// only available as dev dependency</span>
    <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;source-map-support&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">install</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div></li><li><p>\u68C0\u67E5 <code>process.argv</code> \u662F\u5426\u662F <code>debug</code> \u6A21\u5F0F</p><div class="language-js"><pre><code><span class="token comment">// check debug mode first before requiring the CLI.</span>
<span class="token keyword">const</span> debugIndex <span class="token operator">=</span> process<span class="token punctuation">.</span>argv<span class="token punctuation">.</span><span class="token function">findIndex</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">arg</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
  <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^(?:-d|--debug)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>arg<span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> filterIndex <span class="token operator">=</span> process<span class="token punctuation">.</span>argv<span class="token punctuation">.</span><span class="token function">findIndex</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">arg</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
  <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^(?:-f|--filter)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>arg<span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span>debugIndex <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> value <span class="token operator">=</span> process<span class="token punctuation">.</span>argv<span class="token punctuation">[</span>debugIndex <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>value <span class="token operator">||</span> value<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">&quot;-&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    value <span class="token operator">=</span> <span class="token string">&quot;vite:*&quot;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">// support debugging multiple flags with comma-separated list</span>
    value <span class="token operator">=</span> value
      <span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;,&quot;</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">v</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">vite:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>v<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot;,&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">DEBUG</span> <span class="token operator">=</span> value<span class="token punctuation">;</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>filterIndex <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> filter <span class="token operator">=</span> process<span class="token punctuation">.</span>argv<span class="token punctuation">[</span>filterIndex <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>filter <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>filter<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">&quot;-&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">VITE_DEBUG_FILTER</span> <span class="token operator">=</span> filter<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div></li><li><p>\u5BFC\u5165\u7F16\u8BD1\u540E\u7684 <code>cli</code> \u811A\u672C</p><div class="language-js"><pre><code><span class="token keyword">const</span> profileIndex <span class="token operator">=</span> process<span class="token punctuation">.</span>argv<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&quot;--profile&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;../dist/node/cli&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u5982\u679C\u914D\u7F6E\u4E86 profile \u53C2\u6570</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>profileIndex <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u622A\u6389 &#39;--profile&#39;</span>
  process<span class="token punctuation">.</span>argv<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>profileIndex<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> next <span class="token operator">=</span> process<span class="token punctuation">.</span>argv<span class="token punctuation">[</span>profileIndex<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>next <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>next<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">&quot;-&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    process<span class="token punctuation">.</span>argv<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>profileIndex<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u521B\u5EFA\u4F1A\u8BDD\u8FDE\u63A5</span>
  <span class="token keyword">const</span> inspector <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;inspector&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> session <span class="token operator">=</span> <span class="token punctuation">(</span>global<span class="token punctuation">.</span>__vite_profile_session <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">inspector<span class="token punctuation">.</span>Session</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  session<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  session<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&quot;Profiler.enable&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    session<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&quot;Profiler.start&quot;</span><span class="token punctuation">,</span> start<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u6B63\u5E38\u542F\u52A8</span>
  <span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div></li><li><p>\u8FDB\u5165\u7F16\u8BD1\u540E\u7684 <code>dist/node/cli.js</code>\uFF0C\u5373 <code>src/node/cli.ts</code></p><div class="language-ts"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> cac <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;cac&quot;</span><span class="token punctuation">;</span> <span class="token comment">/* \u4E00\u4E2A\u7B80\u5355\u4E14\u5F3A\u5927\u7684\u547D\u4EE4\u884C\u5E93\uFF0C\u6BD4 commander \u66F4\u8F7B\u91CF */</span>
<span class="token keyword">import</span> chalk <span class="token keyword">from</span> <span class="token string">&quot;chalk&quot;</span><span class="token punctuation">;</span> <span class="token comment">/* \u7F8E\u5316\u63A7\u5236\u53F0\u65E5\u5FD7\u8BB0\u5F55 */</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> performance <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;perf_hooks&quot;</span><span class="token punctuation">;</span> <span class="token comment">/* node.js \u6536\u96C6\u6027\u80FD\u6307\u6807\u7684\u5BF9\u8C61 */</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> BuildOptions <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./build&quot;</span><span class="token punctuation">;</span> <span class="token comment">/* \u6253\u5305 \u{1F4E6} \u914D\u7F6E\u9879 */</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> ServerOptions <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./server&quot;</span><span class="token punctuation">;</span> <span class="token comment">/* \u542F\u52A8\u670D\u52A1\u7684\u914D\u7F6E\u9879 */</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> createLogger<span class="token punctuation">,</span> LogLevel <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./logger&quot;</span><span class="token punctuation">;</span> <span class="token comment">/* \u6253\u5370\u65E5\u5FD7 */</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> resolveConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;.&quot;</span><span class="token punctuation">;</span> <span class="token comment">/* \u5904\u7406\u914D\u7F6E\u9879\u7684\u65B9\u6CD5 */</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> preview <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./preview&quot;</span><span class="token punctuation">;</span> <span class="token comment">/* \u6253\u5305\u7ED3\u679C\u9884\u89C8\u65B9\u6CD5 */</span>

<span class="token comment">// \u4F7F\u7528 cac \u751F\u6210 cli \u5B9E\u4F8B</span>
<span class="token keyword">const</span> cli <span class="token operator">=</span> <span class="token function">cac</span><span class="token punctuation">(</span><span class="token string">&quot;vite&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div></li><li><p>\u5168\u5C40 cli \u9009\u9879\u53CA\u6E05\u7406\u9009\u9879</p><div class="language-ts"><pre><code><span class="token comment">// global options</span>
<span class="token keyword">interface</span> <span class="token class-name">GlobalCLIOptions</span> <span class="token punctuation">{</span>
  <span class="token string">&quot;--&quot;</span><span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  c<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token operator">|</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  config<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  base<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  l<span class="token operator">?</span><span class="token operator">:</span> LogLevel<span class="token punctuation">;</span>
  logLevel<span class="token operator">?</span><span class="token operator">:</span> LogLevel<span class="token punctuation">;</span>
  clearScreen<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
  d<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token operator">|</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  debug<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token operator">|</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  f<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  filter<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  m<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  mode<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">/**
 * removing global flags before passing as command specific sub-configs
 */</span>
<span class="token keyword">function</span> <span class="token generic-function"><span class="token function">cleanOptions</span><span class="token generic class-name"><span class="token operator">&lt;</span>Options <span class="token keyword">extends</span> GlobalCLIOptions<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>
  options<span class="token operator">:</span> Options
<span class="token punctuation">)</span><span class="token operator">:</span> Omit<span class="token operator">&lt;</span>Options<span class="token punctuation">,</span> <span class="token keyword">keyof</span> GlobalCLIOptions<span class="token operator">&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> ret <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token operator">...</span>options <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">delete</span> ret<span class="token punctuation">[</span><span class="token string">&quot;--&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">delete</span> ret<span class="token punctuation">.</span>c<span class="token punctuation">;</span>
  <span class="token keyword">delete</span> ret<span class="token punctuation">.</span>config<span class="token punctuation">;</span>
  <span class="token keyword">delete</span> ret<span class="token punctuation">.</span>base<span class="token punctuation">;</span>
  <span class="token keyword">delete</span> ret<span class="token punctuation">.</span>l<span class="token punctuation">;</span>
  <span class="token keyword">delete</span> ret<span class="token punctuation">.</span>logLevel<span class="token punctuation">;</span>
  <span class="token keyword">delete</span> ret<span class="token punctuation">.</span>clearScreen<span class="token punctuation">;</span>
  <span class="token keyword">delete</span> ret<span class="token punctuation">.</span>d<span class="token punctuation">;</span>
  <span class="token keyword">delete</span> ret<span class="token punctuation">.</span>debug<span class="token punctuation">;</span>
  <span class="token keyword">delete</span> ret<span class="token punctuation">.</span>f<span class="token punctuation">;</span>
  <span class="token keyword">delete</span> ret<span class="token punctuation">.</span>filter<span class="token punctuation">;</span>
  <span class="token keyword">delete</span> ret<span class="token punctuation">.</span>m<span class="token punctuation">;</span>
  <span class="token keyword">delete</span> ret<span class="token punctuation">.</span>mode<span class="token punctuation">;</span>
  <span class="token keyword">return</span> ret<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div></li><li><p>cli \u53C2\u6570\u5B9A\u4E49\uFF0C\u8FD9\u91CC\u6211\u4EEC\u5C31\u53EA\u7814\u7A76\u4E00\u4E0B\u5F00\u53D1\u73AF\u5883\u4E0B\u7684\u529F\u80FD\u5B9E\u73B0\uFF0C\u540E\u7EED\u751F\u4EA7\u73AF\u5883/\u9884\u89C8\u73AF\u5883\u518D\u8003\u8651\u8981\u4E0D\u8981\u52A0\u4E0A\u5427</p><div class="language-ts"><pre><code><span class="token comment">// \u4E0B\u9762\u662F\u4E00\u4E9B\u6838\u5FC3\u53C2\u6570\uFF0C\u5982 -c \u6307\u5B9A\u914D\u7F6E\u6587\u4EF6\u7B49</span>
cli
  <span class="token punctuation">.</span><span class="token function">option</span><span class="token punctuation">(</span><span class="token string">&quot;-c, --config &lt;file&gt;&quot;</span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">[string] use specified config file</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">option</span><span class="token punctuation">(</span><span class="token string">&quot;--base &lt;path&gt;&quot;</span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">[string] public base path (default: /)</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">option</span><span class="token punctuation">(</span><span class="token string">&quot;-l, --logLevel &lt;level&gt;&quot;</span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">[string] info | warn | error | silent</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">option</span><span class="token punctuation">(</span>
    <span class="token string">&quot;--clearScreen&quot;</span><span class="token punctuation">,</span>
    <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">[boolean] allow/disable clear screen when logging</span><span class="token template-punctuation string">\`</span></span>
  <span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">option</span><span class="token punctuation">(</span><span class="token string">&quot;-d, --debug [feat]&quot;</span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">[string | boolean] show debug logs</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">option</span><span class="token punctuation">(</span><span class="token string">&quot;-f, --filter &lt;filter&gt;&quot;</span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">[string] filter debug logs</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">option</span><span class="token punctuation">(</span><span class="token string">&quot;-m, --mode &lt;mode&gt;&quot;</span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">[string] set env mode</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// dev \u5F00\u53D1\u73AF\u5883\uFF0C\u4E3B\u8981\u9488\u5BF9 server \u7684\u53C2\u6570\u914D\u7F6E</span>
cli
  <span class="token punctuation">.</span><span class="token function">command</span><span class="token punctuation">(</span><span class="token string">&quot;[root]&quot;</span><span class="token punctuation">)</span> <span class="token comment">// default command</span>
  <span class="token punctuation">.</span><span class="token function">alias</span><span class="token punctuation">(</span><span class="token string">&quot;serve&quot;</span><span class="token punctuation">)</span> <span class="token comment">// the command is called &#39;serve&#39; in Vite&#39;s API</span>
  <span class="token punctuation">.</span><span class="token function">alias</span><span class="token punctuation">(</span><span class="token string">&quot;dev&quot;</span><span class="token punctuation">)</span> <span class="token comment">// alias to align with the script name</span>
  <span class="token punctuation">.</span><span class="token function">option</span><span class="token punctuation">(</span><span class="token string">&quot;--host [host]&quot;</span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">[string] specify hostname</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">option</span><span class="token punctuation">(</span><span class="token string">&quot;--port &lt;port&gt;&quot;</span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">[number] specify port</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">option</span><span class="token punctuation">(</span><span class="token string">&quot;--https&quot;</span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">[boolean] use TLS + HTTP/2</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">option</span><span class="token punctuation">(</span><span class="token string">&quot;--open [path]&quot;</span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">[boolean | string] open browser on startup</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">option</span><span class="token punctuation">(</span><span class="token string">&quot;--cors&quot;</span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">[boolean] enable CORS</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">option</span><span class="token punctuation">(</span>
    <span class="token string">&quot;--strictPort&quot;</span><span class="token punctuation">,</span>
    <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">[boolean] exit if specified port is already in use</span><span class="token template-punctuation string">\`</span></span>
  <span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">option</span><span class="token punctuation">(</span>
    <span class="token string">&quot;--force&quot;</span><span class="token punctuation">,</span>
    <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">[boolean] force the optimizer to ignore the cache and re-bundle</span><span class="token template-punctuation string">\`</span></span>
  <span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">action</span><span class="token punctuation">(</span>devAction<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u8FD9\u91CC\u5C06 action \u51FD\u6570\u62BD\u51FA\u6765\u5355\u72EC\u5199\uFF0C\u514D\u5F97\u7BC7\u5E45\u8FC7\u957F</span>
</code></pre></div><p><code>devAction \u51FD\u6570</code>\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">const</span> <span class="token function-variable function">devAction</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span>
  root<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>
  options<span class="token operator">:</span> ServerOptions <span class="token operator">&amp;</span> GlobalCLIOptions
<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// output structure is preserved even after bundling so require()</span>
  <span class="token comment">// is ok here</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> createServer <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&quot;./server&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u52A8\u6001\u5BFC\u5165\u521B\u5EFA dev-server</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> server <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">createServer</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      root<span class="token punctuation">,</span>
      base<span class="token operator">:</span> options<span class="token punctuation">.</span>base<span class="token punctuation">,</span>
      mode<span class="token operator">:</span> options<span class="token punctuation">.</span>mode<span class="token punctuation">,</span>
      configFile<span class="token operator">:</span> options<span class="token punctuation">.</span>config<span class="token punctuation">,</span>
      logLevel<span class="token operator">:</span> options<span class="token punctuation">.</span>logLevel<span class="token punctuation">,</span>
      clearScreen<span class="token operator">:</span> options<span class="token punctuation">.</span>clearScreen<span class="token punctuation">,</span>
      server<span class="token operator">:</span> <span class="token function">cleanOptions</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>server<span class="token punctuation">.</span>httpServer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&quot;HTTP server not available&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">await</span> server<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">const</span> info <span class="token operator">=</span> server<span class="token punctuation">.</span>config<span class="token punctuation">.</span>logger<span class="token punctuation">.</span>info<span class="token punctuation">;</span>

    <span class="token function">info</span><span class="token punctuation">(</span>
      chalk<span class="token punctuation">.</span><span class="token function">cyan</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\\n  vite v</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">require</span><span class="token punctuation">(</span><span class="token string">&quot;vite/package.json&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>version<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span> <span class="token operator">+</span>
        chalk<span class="token punctuation">.</span><span class="token function">green</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string"> dev server running at:\\n</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        clear<span class="token operator">:</span> <span class="token operator">!</span>server<span class="token punctuation">.</span>config<span class="token punctuation">.</span>logger<span class="token punctuation">.</span>hasWarned<span class="token punctuation">,</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>

    server<span class="token punctuation">.</span><span class="token function">printUrls</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// __vite_start_time \u5728\u6267\u884C vite \u547D\u4EE4\u65F6</span>
    <span class="token comment">// \u8D4B\u503C\u4E3A performance.now()\uFF0C\u8BB0\u5F55\u542F\u52A8\u670D\u52A1\u7684\u5F00\u59CB\u65F6\u95F4</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>global<span class="token punctuation">.</span>__vite_start_time<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u670D\u52A1\u542F\u52A8\u65F6\u95F4\uFF08ms\uFF09</span>
      <span class="token keyword">const</span> startupDuration <span class="token operator">=</span> performance<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> global<span class="token punctuation">.</span>__vite_start_time<span class="token punctuation">;</span>
      <span class="token function">info</span><span class="token punctuation">(</span>
        <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\\n  </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>chalk<span class="token punctuation">.</span><span class="token function">cyan</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">ready in </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>Math<span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span>startupDuration<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">ms.</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\\n</span><span class="token template-punctuation string">\`</span></span>
      <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u6253\u5370\u670D\u52A1\u542F\u52A8\u5931\u8D25\u7684\u65E5\u5FD7</span>
    <span class="token function">createLogger</span><span class="token punctuation">(</span>options<span class="token punctuation">.</span>logLevel<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>
      chalk<span class="token punctuation">.</span><span class="token function">red</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">error when starting dev server:\\n</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>e<span class="token punctuation">.</span>stack<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span> error<span class="token operator">:</span> e <span class="token punctuation">}</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u7ED3\u675F\u8FDB\u7A0B</span>
    process<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div></li></ol>`,5),e=[o];function c(u,l,i,k,r,g){return a(),s("div",null,e)}var f=n(p,[["render",c]]);export{m as __pageData,f as default};
